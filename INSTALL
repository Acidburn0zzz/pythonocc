OVERVIEW:
========

pythonOCC is a python library whose purpose is to provide 3D modeling features,
as well as parametric modeling, data exchange, meshing etc. It's intended to
developers who aim at developing a complete CAD/PLM application, and to
engineers who want to have a total control over the data during complex design
activities.

ABOUT THIS DOCUMENT:
====================

This file explains how to build pythonOCC from scratch under any Linux or
MacOSX platform. Windows users are encouraged to download the precompiled
binaries available from the pythonocc website (http://www.pythonocc.org).

REQUIREMENTS:
=============

pythonOCC needs the following libraries to be installed in order to provide
full features:

- the python programming language (http://www.python.org). Python 2.5 or
higher is required,

- a fortran compiler. Linux and MacOSX users should use gfortran. The Watcom
Fortran compiler appears to be the best choice for Windows users.

*NOTE* : MacOSX 10.6 (Snow Leopard) 64bit users have to use the f77 fortran
compiler available from http://hpc.sourceforge.net/:
Download the script build_f2c at http://hpc.sourceforge.net/buildf2c
then:
sudo sh buildf2c
As a result, f77/f2c are installed in /usr/local/bin. symlinks are created in
the /bin directory
 
- SWIG 1.3.36 or higher,

- OpenCASCADE 6.3.0 (download from http://www.opencascade.org),

- CMake 2.6 or higher.

At the end of the compilation process, be sure the CASROOT env var is set.

Step1 and Step2 are OS specific.

##############################################################
# Step 1 and 2: GEOM and SMESH installation on Linux/Windows #
##############################################################

Step 1 : build and install the SMESH library
============================================
cd src
sh ./wrapper/build_smesh.sh

You will be prompted to enter your admin password just before installation.
At the end of the process, the shared library libSMESH.dylib (libSMESH.so on
Linux) is installed to /usr/local/lib

Step 2 : build and install the GEOM library
============================================
from the same directory:
sh ./wrapper/build_geom.sh

You will be prompted to enter your admin password just before installation.
At the end of the process, the shared library libGEOM.dylib (libGEOM.so on
Linux) is installed to /usr/local/lib

** Note 2.1 ** if either the Step 1 or Step 2 fails, you will not be able to
compile pythonOCC with SMESH and GEOM support. As a consequence, you will only
benefit from poor meshing features and you'll miss the parametric modeling
framework. You will however be able to run most of OCC based examples.

########################################################################
# Step 1 and 2: GEOM and SMESH installation on Windows 2000/XP/Vista/7 #
########################################################################

Step 1 : build and install the SMESH library
============================================
cd src
./wrapper/build_smesh.bat

At the end of the process, the shared library SMESH.dll is in ...

Step 2 : build and install the GEOM library
============================================
from the same directory:
./wrapper/build_geom.bat

At the end of the process, the shared library GEOM.dll is in ...

################################
# Step 3: platform independant #
################################

Step 3 : build and install pythonOCC
====================================
from the same directory:
python setup.py build
sudo python setup.py install

You can disable the GEOM or SMESH support by passing arguments to the command
line. For instance:
python setup.py build --disable-GEOM --disable-SMESH
python setup.py install --disable-GEOM --disable-SMESH

** Note 3.1 ** if either the Step 1 or Step 2 fails, you will not be able to
compile pythonOCC with SMESH and GEOM support. As a consequence, you will only
benefit from poor meshing features and you'll miss the parametric modeling
framework. You will however be able to run most of OCC based examples.

** Note 3.2 ** due to limitations in distutils, these two commands must be run
sequentially, it is not possible to run 'python setup.py build install' or
directy 'python setup.py install'.

Additional information:
=======================

You can use the following arguments to overload default parameters:
--with-geom-lib=/path_to_geom_libs 
--with-smesh-lib=/path_to_smesh_libs
--with-occ-include=/path_to_opencascade_inc
--with-occ-lib=/path_to_opencascade_libs

To have details about the available customizations:
python setup.py --help 



