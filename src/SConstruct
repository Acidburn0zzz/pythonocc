#!/usr/bin/scons
# coding: UTF-8

##Copyright 2008, 2009 Thomas Paviot
##
##thomas.paviot@free.fr
##
##pythonOCC is a computer program whose purpose is to provide a complete set
##of python bindings for OpenCasacde library.
##
##This software is governed by the CeCILL license under French law and
##abiding by the rules of distribution of free software.  You can  use, 
##modify and/ or redistribute the software under the terms of the CeCILL
##license as circulated by CEA, CNRS and INRIA at the following URL
##"http://www.cecill.info". 
##
##As a counterpart to the access to the source code and  rights to copy,
##modify and redistribute granted by the license, users are provided only
##with a limited warranty  and the software's author,  the holder of the
##economic rights,  and the successive licensors  have only  limited
##liability. 
##
##In this respect, the user's attention is drawn to the risks associated
##with loading,  using,  modifying and/or developing or reproducing the
##software by the user in light of its specific status of free software,
##that may mean  that it is complicated to manipulate,  and  that  also
##therefore means  that it is reserved for developers  and  experienced
##professionals having in-depth computer knowledge. Users are therefore
##encouraged to load and test the software's suitability as regards their
##requirements in conditions enabling the security of their systems and/or 
##data to be ensured and,  more generally, to use and operate it in the 
##same conditions as regards security. 
##
##The fact that you are presently reading this means that you have had
##knowledge of the CeCILL license and that you accept its terms.

from distutils import sysconfig
import os

#
# Build environment
#
env = Environment()

print 'Build platform: %s'%env['PLATFORM']
print 'Compiler: %s'%env['CC']
print 'C++ compiler: %s'%env['CXX']
#
# Setting paths
#
PYTHON_INC = sysconfig.get_python_inc()
OCC_ROOT = os.environ['CASROOT']
OCC_INC = os.path.join(OCC_ROOT,'inc')
OCC_LIB = os.path.join(OCC_ROOT,'win32','lib')

env.Append( CPPPATH= [PYTHON_INC,OCC_INC])
env.Append( LIBPATH = [OCC_LIB] )
#
# Check configuration
#
conf = env.Configure()

header_list = ['stdlib.h','stdio.h','errno.h','ctype.h','stdarg.h','string','Python.h','tcl.h']
def CheckHeader(header_list):
	for header in header_list:
		conf.CheckHeader(header)#if not conf.CheckCHeader(header):
			#print "You need '%s' to compile this program"%header
			#Exit(1)
CheckHeader(header_list)
if not conf.CheckCHeader('Standard_Real.hxx'):
  print "You need 'Standard_Real.hxx' to compile this program"
  Exit(1)

env = conf.Finish()
  