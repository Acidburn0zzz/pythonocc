ABOUT:

pythonOCC is a computer program whose purpose is to provide a complete set
of python bindings for OpenCasacde library.

BUILD:

You can either build pythonOCC from the SWIG files that come with the distribution (case A)
or generate your own wrapper (case B).

* Case A: build wrapper from SWIG files included in the distribution

Requirements:
- Visual Studio 2003 or higher ((Windows only)
- Swig 1.3.36 or higher (for Windwos users, the swig.exe file must be added to the PATH environment
variable).
- OpenCascade. Release 6.3.0 was used to generate the binaries. Older release may work as well,
but it's not tested.

Step 1: extract the content of pythonOCC-1.0pre2 

Step 2: 'python setup.py build -f -cmsvc'

Step 3: copy the OCC.py python script generated by swig (in the SWIG_src directory) to the build
directory.

Step 4: 'python setup.py install' or manual copy of (_OCC.pyd and OCC.py file to the site_packages directory)

Step 5: check installation. From a python prompt, just enter 'from OCC import *'. You should not
get any error. 

IMPORTANT:
- this process could be quite long (about 1 hour) and consume high memory. Close all running
apps before starting the build process.
- this process have been tested for Windows only. It still requires fine tuning to be successfull
under Linux.

* Case B: build your own wrapper
Requirements:
- Visual Studio 2003 or higher (Windows only)
- Swig 1.3.36 or higher (for Windwos users, the swig.exe file must be added to the PATH environment
variable).
- OpenCascade. Release 6.3.0 was used to generate the binaries. Older release may work as well,
but it's not tested.
- pygccxml 1.0

Step 1: extract the content of pythonOCC-1.0pre2 

Step 2: python setup.py build -f -cmsvc generate_swig

Note: paths are defined in the environment.py script.
Windows users should modify only the 'GCCXMLPATH'.
Linux users should also modify the 'OCC_LIB' path.

Following steps are the same than the previous Case A.

IMPORTANT: by passing the generate_doc flag, the generator scripts can also extract documentation
strings from OCC header files. Note that this feature is for your own purpose and that you must not
redistribute the resulting package since it would break the OCC and CeCILL licenses.

